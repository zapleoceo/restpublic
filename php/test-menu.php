<?php
/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 */

echo "<h1>üîç –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é North Republic</h1>\n";
echo "<style>body{font-family:monospace;margin:20px;} .ok{color:green;} .error{color:red;} .warning{color:orange;}</style>\n";

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo "<h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB</h2>\n";
try {
    require_once __DIR__ . '/vendor/autoload.php';
    if (class_exists('MongoDB\Client')) {
        echo "<span class='ok'>‚úÖ MongoDB PHP –¥—Ä–∞–π–≤–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</span><br>\n";
        
        $client = new MongoDB\Client("mongodb://localhost:27017");
        $db = $client->northrepublic;
        $collection = $db->menu;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        $result = $collection->findOne(['_id' => 'current_menu']);
        if ($result) {
            echo "<span class='ok'>‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</span><br>\n";
            echo "<span class='ok'>‚úÖ –ö—ç—à –º–µ–Ω—é –Ω–∞–π–¥–µ–Ω</span><br>\n";
            echo "üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: " . count($result['categories'] ?? []) . "<br>\n";
            echo "üìä –ü—Ä–æ–¥—É–∫—Ç—ã: " . count($result['products'] ?? []) . "<br>\n";
            echo "üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: " . ($result['updated_at'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "<br>\n";
        } else {
            echo "<span class='warning'>‚ö†Ô∏è –ö—ç—à –º–µ–Ω—é –ø—É—Å—Ç</span><br>\n";
        }
    } else {
        echo "<span class='error'>‚ùå MongoDB PHP –¥—Ä–∞–π–≤–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</span><br>\n";
    }
} catch (Exception $e) {
    echo "<span class='error'>‚ùå –û—à–∏–±–∫–∞ MongoDB: " . $e->getMessage() . "</span><br>\n";
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MenuCache –∫–ª–∞—Å—Å–∞
echo "<h2>2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MenuCache</h2>\n";
try {
    require_once __DIR__ . '/classes/MenuCache.php';
    $menuCache = new MenuCache();
    echo "<span class='ok'>‚úÖ MenuCache –∫–ª–∞—Å—Å –∑–∞–≥—Ä—É–∂–µ–Ω</span><br>\n";
    
    $menuData = $menuCache->getMenu();
    if ($menuData) {
        echo "<span class='ok'>‚úÖ MenuCache.getMenu() —Ä–∞–±–æ—Ç–∞–µ—Ç</span><br>\n";
        echo "üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: " . count($menuData['categories']) . "<br>\n";
        echo "üìä –ü—Ä–æ–¥—É–∫—Ç—ã: " . count($menuData['products']) . "<br>\n";
    } else {
        echo "<span class='warning'>‚ö†Ô∏è MenuCache.getMenu() –≤–µ—Ä–Ω—É–ª null</span><br>\n";
    }
} catch (Exception $e) {
    echo "<span class='error'>‚ùå –û—à–∏–±–∫–∞ MenuCache: " . $e->getMessage() . "</span><br>\n";
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API
echo "<h2>3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API</h2>\n";
$api_url = 'https://northrepublic.me:3002/api/health';
$context = stream_context_create([
    'http' => [
        'timeout' => 5,
        'method' => 'GET'
    ]
]);

$response = @file_get_contents($api_url, false, $context);
if ($response !== false) {
    echo "<span class='ok'>‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω</span><br>\n";
    $data = json_decode($response, true);
    if ($data) {
        echo "üìä –°—Ç–∞—Ç—É—Å: " . ($data['status'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "<br>\n";
        echo "üìä Uptime: " . ($data['uptime'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . " —Å–µ–∫<br>\n";
    }
} else {
    echo "<span class='error'>‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span><br>\n";
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –º–µ–Ω—é
echo "<h2>4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –º–µ–Ω—é</h2>\n";
$menu_api_url = 'https://northrepublic.me:3002/api/menu';
$response = @file_get_contents($menu_api_url, false, $context);
if ($response !== false) {
    echo "<span class='ok'>‚úÖ API –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–µ–Ω</span><br>\n";
    $data = json_decode($response, true);
    if ($data) {
        echo "üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: " . count($data['categories'] ?? []) . "<br>\n";
        echo "üìä –ü—Ä–æ–¥—É–∫—Ç—ã: " . count($data['products'] ?? []) . "<br>\n";
    }
} else {
    echo "<span class='error'>‚ùå API –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span><br>\n";
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo "<h2>5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤</h2>\n";
$files_to_check = [
    'menu.php' => '–û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–µ–Ω—é',
    'classes/MenuCache.php' => '–ö–ª–∞—Å—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è',
    'init-cache.php' => '–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫—ç—à–∞',
    'components/header.php' => '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞',
    'components/footer.php' => '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥–≤–∞–ª–∞',
    'components/cart.php' => '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ—Ä–∑–∏–Ω—ã'
];

foreach ($files_to_check as $file => $description) {
    if (file_exists(__DIR__ . '/' . $file)) {
        echo "<span class='ok'>‚úÖ $description ($file)</span><br>\n";
    } else {
        echo "<span class='error'>‚ùå $description ($file) –Ω–µ –Ω–∞–π–¥–µ–Ω</span><br>\n";
    }
}

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π –∫ —Ä–µ—Å—É—Ä—Å–∞–º
echo "<h2>6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤</h2>\n";
$resources_to_check = [
    'template/css/styles.css' => '–û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏',
    'template/css/vendor.css' => 'Vendor —Å—Ç–∏–ª–∏',
    'template/js/main.js' => '–û—Å–Ω–æ–≤–Ω–æ–π JavaScript',
    'template/js/plugins.js' => 'JavaScript –ø–ª–∞–≥–∏–Ω—ã',
    'images/logo.png' => '–õ–æ–≥–æ—Ç–∏–ø'
];

foreach ($resources_to_check as $resource => $description) {
    if (file_exists(__DIR__ . '/../' . $resource)) {
        echo "<span class='ok'>‚úÖ $description ($resource)</span><br>\n";
    } else {
        echo "<span class='error'>‚ùå $description ($resource) –Ω–µ –Ω–∞–π–¥–µ–Ω</span><br>\n";
    }
}

echo "<h2>üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>\n";
echo "<ul>\n";
echo "<li>–ï—Å–ª–∏ MongoDB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –∑–∞–ø—É—Å—Ç–∏—Ç–µ: <code>sudo systemctl start mongodb</code></li>\n";
echo "<li>–ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: <code>pm2 restart northrepublic-backend</code></li>\n";
echo "<li>–ï—Å–ª–∏ –∫—ç—à –ø—É—Å—Ç - –∑–∞–ø—É—Å—Ç–∏—Ç–µ: <code>php php/init-cache.php</code></li>\n";
echo "<li>–ï—Å–ª–∏ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: <code>./deploy.sh</code></li>\n";
echo "</ul>\n";

echo "<p><a href='menu.php'>üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–µ–Ω—é</a></p>\n";
?>
