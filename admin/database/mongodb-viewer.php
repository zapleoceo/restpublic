<?php
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
if (isset($database) && isset($databaseName)) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    $mongoConnection = true;
    $error = null;
} else {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    require_once __DIR__ . '/../../vendor/autoload.php';
    if (file_exists(__DIR__ . '/../../.env')) {
        $dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/../..');
        $dotenv->load();
    }

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    $mongoUri = $_ENV['MONGODB_URL'] ?? 'mongodb://localhost:27017';
    $databaseName = $_ENV['MONGODB_DB_NAME'] ?? 'veranda';
    $mongoConnection = false;
    $error = null;

    try {
        $client = new MongoDB\Client($mongoUri);
        $database = $client->selectDatabase($databaseName);
        $mongoConnection = true;
    } catch (Exception $e) {
        $error = $e->getMessage();
    }
}

if ($mongoConnection && !$error) {
    try {
    
    // –û–ø–∏—Å–∞–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π
    $collectionDescriptions = [
        'admin_users' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∞–¥–º–∏–Ω–∫–∏ - –ª–æ–≥–∏–Ω—ã, –ø–∞—Ä–æ–ª–∏, —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',
        'admin_logs' => '–õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ - –≤—Ö–æ–¥—ã, –∏–∑–º–µ–Ω–µ–Ω–∏—è, –æ–ø–µ—Ä–∞—Ü–∏–∏',
        'admin_sessions' => '–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ - —Ç–æ–∫–µ–Ω—ã, –≤—Ä–µ–º—è –≤—Ö–æ–¥–∞',
        'page_content' => '–ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü —Å–∞–π—Ç–∞ - —Ç–µ–∫—Å—Ç—ã, –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–≤–æ–¥—ã',
        'admin_texts' => '–¢–µ–∫—Å—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ - –ø–µ—Ä–µ–≤–æ–¥—ã –º–µ–Ω—é, –∫–Ω–æ–ø–æ–∫, —Å–æ–æ–±—â–µ–Ω–∏–π',
        'menu_cache' => '–ö—ç—à –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ - –±–ª—é–¥–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ü–µ–Ω—ã',
        'events' => '–°–æ–±—ã—Ç–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ - –±–∞–Ω–∫–µ—Ç—ã, –≤–µ—á–µ—Ä–∏–Ω–∫–∏, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
        'tables_cache' => '–ö—ç—à —Å—Ç–æ–ª–æ–≤ - –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ç–∞—Ç—É—Å',
        'sepay_transactions' => '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ SePay - –ø–ª–∞—Ç–µ–∂–∏, —Å—Ç–∞—Ç—É—Å—ã, webhook –¥–∞–Ω–Ω—ã–µ',
        'rate_limits' => '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ - IP –∞–¥—Ä–µ—Å–∞, –ª–∏–º–∏—Ç—ã, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏',
        'telegram_logs' => '–õ–æ–≥–∏ Telegram –±–æ—Ç–∞ - —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ–º–∞–Ω–¥—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        'image_cache' => '–ö—ç—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –º–∏–Ω–∏–∞—Ç—é—Ä—ã, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏',
        'settings' => '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        'user_sessions' => '–°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∞–π—Ç–∞ - –∫–æ—Ä–∑–∏–Ω–∞, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è',
        'orders' => '–ó–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ - –±–ª—é–¥–∞, —Å—É–º–º—ã, —Å—Ç–∞—Ç—É—Å—ã –¥–æ—Å—Ç–∞–≤–∫–∏',
        'feedback' => '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ - –æ—Ü–µ–Ω–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Ä–µ–π—Ç–∏–Ω–≥–∏',
        'newsletter' => '–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É - email –∞–¥—Ä–µ—Å–∞, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è',
        'analytics' => '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–∞–π—Ç–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä—ã, –∫–ª–∏–∫–∏, –∫–æ–Ω–≤–µ—Ä—Å–∏–∏'
    ];

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–π
    $collections = $database->listCollections();
    $collectionsList = [];
    
    foreach ($collections as $collection) {
        $collectionName = $collection->getName();
        $collectionObj = $database->selectCollection($collectionName);
        $count = $collectionObj->countDocuments();
        
        $collectionsList[] = [
            'name' => $collectionName,
            'count' => $count,
            'description' => $collectionDescriptions[$collectionName] ?? '–ö–æ–ª–ª–µ–∫—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö - –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'
        ];
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    $selectedCollection = $_GET['collection'] ?? '';
    $collectionData = [];
    $collectionStats = [];
    
    if ($selectedCollection && in_array($selectedCollection, array_column($collectionsList, 'name'))) {
        $collectionObj = $database->selectCollection($selectedCollection);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        $stats = $database->command(['collStats' => $selectedCollection])->toArray()[0];
        $collectionStats = [
            'count' => $stats['count'] ?? 0,
            'size' => $stats['size'] ?? 0,
            'avgObjSize' => $stats['avgObjSize'] ?? 0,
            'storageSize' => $stats['storageSize'] ?? 0,
            'indexes' => $stats['nindexes'] ?? 0
        ];
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–æ 100)
        $limit = min(100, $collectionStats['count']);
        $documents = $collectionObj->find([], ['limit' => $limit, 'sort' => ['_id' => -1]]);
        $collectionData = iterator_to_array($documents);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—è)
        $structureFields = [];
        $sampleDocuments = $collectionObj->find([], ['limit' => 10]);
        foreach ($sampleDocuments as $doc) {
            extractFields($doc, $structureFields);
        }
    }
    
    } catch (Exception $e) {
        $error = $e->getMessage();
    }
} else {
    // –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –º–∞—Å—Å–∏–≤—ã
    $collectionsList = [];
    $collectionData = [];
    $collectionStats = [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
function formatBytes($bytes, $precision = 2) {
    $units = array('B', 'KB', 'MB', 'GB', 'TB');
    
    for ($i = 0; $bytes > 1024 && $i < count($units) - 1; $i++) {
        $bytes /= 1024;
    }
    
    return round($bytes, $precision) . ' ' . $units[$i];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è JSON
function formatJson($data) {
    return json_encode($data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª–µ–π –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞
function extractFields($document, &$fields, $prefix = '') {
    foreach ($document as $key => $value) {
        $fieldName = $prefix ? $prefix . '.' . $key : $key;
        
        if (is_array($value) || is_object($value)) {
            if (is_array($value) && !empty($value) && !isset($value[0])) {
                // –ê—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ - —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
                extractFields($value, $fields, $fieldName);
            } else {
                // –û–±—ã—á–Ω—ã–π –º–∞—Å—Å–∏–≤ –∏–ª–∏ –æ–±—ä–µ–∫—Ç
                $fields[$fieldName] = gettype($value) . (is_array($value) ? '[' . count($value) . ']' : '');
            }
        } else {
            $fields[$fieldName] = gettype($value);
        }
    }
}
?>

<div class="mongodb-viewer">
    <h3>üóÑÔ∏è MongoDB –ö–æ–ª–ª–µ–∫—Ü–∏–∏</h3>
    
    <?php if (isset($error)): ?>
        <div class="alert alert-error">
            <strong>–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:</strong><br>
            <?php echo htmlspecialchars($error); ?>
        </div>
    <?php else: ?>
        
        <!-- –°–ø–∏—Å–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–π -->
        <div class="collections-list">
            <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:</h4>
            <div class="collections-grid">
                <?php foreach ($collectionsList as $collection): ?>
                    <div class="collection-card">
                        <a href="?collection=<?php echo urlencode($collection['name']); ?>" 
                           class="collection-link <?php echo $selectedCollection === $collection['name'] ? 'active' : ''; ?>">
                            <div class="collection-name">
                                <?php echo htmlspecialchars($collection['name']); ?>
                                <small style="display: block; color: #666; font-size: 0.8em; margin-top: 0.25rem; font-weight: normal;">
                                    <?php echo htmlspecialchars($collection['description']); ?>
                                </small>
                            </div>
                            <div class="collection-count"><?php echo number_format($collection['count']); ?> –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</div>
                        </a>
                    </div>
                <?php endforeach; ?>
            </div>
        </div>
        
        <?php if ($selectedCollection && !empty($collectionStats)): ?>
            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ -->
            <div class="collection-stats">
                <h4>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: <?php echo htmlspecialchars($selectedCollection); ?></h4>
                <div class="stats-grid">
                    <div class="stat-item">
                        <span class="stat-label">–î–æ–∫—É–º–µ–Ω—Ç–æ–≤:</span>
                        <span class="stat-value"><?php echo number_format($collectionStats['count']); ?></span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:</span>
                        <span class="stat-value"><?php echo formatBytes($collectionStats['size']); ?></span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞:</span>
                        <span class="stat-value"><?php echo formatBytes($collectionStats['avgObjSize']); ?></span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">–†–∞–∑–º–µ—Ä –Ω–∞ –¥–∏—Å–∫–µ:</span>
                        <span class="stat-value"><?php echo formatBytes($collectionStats['storageSize']); ?></span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">–ò–Ω–¥–µ–∫—Å–æ–≤:</span>
                        <span class="stat-value"><?php echo $collectionStats['indexes']; ?></span>
                    </div>
                </div>
            </div>
            
            <!-- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ -->
            <?php if (!empty($structureFields)): ?>
                <div class="collection-structure">
                    <h4>üèóÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:</h4>
                    <div class="structure-grid">
                        <?php foreach ($structureFields as $fieldName => $fieldType): ?>
                            <div class="structure-item">
                                <span class="field-name"><?php echo htmlspecialchars($fieldName); ?></span>
                                <span class="field-type"><?php echo htmlspecialchars($fieldType); ?></span>
                            </div>
                        <?php endforeach; ?>
                    </div>
                </div>
            <?php endif; ?>
            
            <!-- –î–æ–∫—É–º–µ–Ω—Ç—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏ -->
            <div class="collection-documents">
                <h4>üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã (–ø–æ–∫–∞–∑–∞–Ω–æ –¥–æ 100 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö):</h4>
                
                <?php if (empty($collectionData)): ?>
                    <div class="alert alert-info">
                        –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—É—Å—Ç–∞
                    </div>
                <?php else: ?>
                    <div class="documents-list">
                        <?php foreach ($collectionData as $index => $document): ?>
                            <div class="document-item">
                                <div class="document-header">
                                    <span class="document-index">#<?php echo $index + 1; ?></span>
                                    <span class="document-id">ID: <?php echo htmlspecialchars($document['_id']); ?></span>
                                </div>
                                <div class="document-content">
                                    <pre class="json-content"><?php echo htmlspecialchars(formatJson($document)); ?></pre>
                                </div>
                            </div>
                        <?php endforeach; ?>
                    </div>
                <?php endif; ?>
            </div>
        <?php endif; ?>
        
    <?php endif; ?>
</div>

<style>
.mongodb-viewer {
    background: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
}

.collections-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
}

.collection-card {
    border: 1px solid #e1e5e9;
    border-radius: 5px;
    overflow: hidden;
    transition: all 0.3s ease;
}

.collection-card:hover {
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    transform: translateY(-2px);
}

.collection-link {
    display: block;
    padding: 1rem;
    text-decoration: none;
    color: inherit;
}

.collection-link.active {
    background: #e3f2fd;
    border-color: #2196f3;
}

.collection-name {
    font-weight: 600;
    color: #333;
    margin-bottom: 0.5rem;
}

.collection-count {
    font-size: 0.9rem;
    color: #666;
}

.collection-stats {
    margin-top: 2rem;
    padding: 1.5rem;
    background: #f8f9fa;
    border-radius: 5px;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
}

.stat-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem;
    background: white;
    border-radius: 3px;
    border: 1px solid #e1e5e9;
}

.stat-label {
    font-weight: 500;
    color: #666;
}

.stat-value {
    font-weight: 600;
    color: #333;
}

.collection-documents {
    margin-top: 2rem;
}

.documents-list {
    max-height: 600px;
    overflow-y: auto;
    border: 1px solid #e1e5e9;
    border-radius: 5px;
}

.document-item {
    border-bottom: 1px solid #e1e5e9;
}

.document-item:last-child {
    border-bottom: none;
}

.document-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1rem;
    background: #f8f9fa;
    border-bottom: 1px solid #e1e5e9;
    font-size: 0.9rem;
}

.document-index {
    font-weight: 600;
    color: #666;
}

.document-id {
    font-family: monospace;
    color: #333;
}

.document-content {
    padding: 1rem;
}

.json-content {
    background: #f8f9fa;
    border: 1px solid #e1e5e9;
    border-radius: 3px;
    padding: 1rem;
    margin: 0;
    font-family: 'Courier New', monospace;
    font-size: 0.85rem;
    line-height: 1.4;
    white-space: pre-wrap;
    word-wrap: break-word;
    max-height: 300px;
    overflow-y: auto;
}

.alert {
    padding: 1rem;
    border-radius: 5px;
    margin: 1rem 0;
}

.alert-error {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

.alert-info {
    background: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
}

.collection-structure {
    margin-top: 2rem;
    padding: 1.5rem;
    background: #f8f9fa;
    border-radius: 5px;
}

.structure-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 0.5rem;
    margin-top: 1rem;
}

.structure-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0.75rem;
    background: white;
    border-radius: 3px;
    border: 1px solid #e1e5e9;
    font-size: 0.9rem;
}

.field-name {
    font-family: monospace;
    font-weight: 600;
    color: #333;
}

.field-type {
    font-size: 0.8rem;
    color: #666;
    background: #e9ecef;
    padding: 0.2rem 0.4rem;
    border-radius: 3px;
}
</style>
