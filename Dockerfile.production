# Multi-stage build для максимальной оптимизации
FROM node:18-alpine AS base
WORKDIR /app
RUN apk add --no-cache git

# Backend stage
FROM base AS backend
COPY backend/package*.json ./backend/
RUN cd backend && npm ci --production --silent

# Frontend stage  
FROM base AS frontend
COPY frontend/package*.json ./frontend/
RUN cd frontend && npm ci --silent
COPY frontend/ ./frontend/
RUN cd frontend && npm run build

# Bot stage
FROM base AS bot
COPY bot/package*.json ./bot/
RUN cd bot && npm ci --production --silent
COPY bot/ ./bot/
RUN cd bot && npm run build

# Final production stage
FROM node:18-alpine AS production
WORKDIR /app

# Install PM2
RUN npm install -g pm2

# Copy built applications
COPY --from=backend /app/backend ./backend
COPY --from=frontend /app/frontend/dist ./public
COPY --from=bot /app/bot/dist ./bot/dist

# Copy configuration
COPY ecosystem-prod.config.js ./
COPY .env ./

# Expose port
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3002/api/health || exit 1

# Start with PM2
CMD ["pm2-runtime", "start", "ecosystem-prod.config.js"]
