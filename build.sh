#!/bin/bash

# RestPublic Auto Build Script v1.0
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Git
if ! command -v git &> /dev/null; then
    error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
if ! command -v node &> /dev/null; then
    error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è npm
if ! command -v npm &> /dev/null; then
    error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–±–æ—Ä–∫—É RestPublic –ø—Ä–æ–µ–∫—Ç–∞..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
log "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [ ! -d ".git" ]; then
    error "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
CURRENT_BRANCH=$(git branch --show-current)
log "üåø –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
if [ -n "$(git status --porcelain)" ]; then
    warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    git status --short
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–±–æ—Ä–∫—É? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log "–°–±–æ—Ä–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
else
    success "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è"
fi

# –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
step "–ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
log "–í—ã–ø–æ–ª–Ω—è–µ–º git fetch..."
git fetch origin

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –∫–æ–º–º–∏—Ç—ã
LOCAL_COMMIT=$(git rev-parse HEAD)
REMOTE_COMMIT=$(git rev-parse origin/$CURRENT_BRANCH)

if [ "$LOCAL_COMMIT" = "$REMOTE_COMMIT" ]; then
    success "–ö–æ–¥ —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω, –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç"
else
    log "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ–º pull..."
    git pull origin $CURRENT_BRANCH
    success "–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    local dir=$1
    local name=$2
    
    step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è $name..."
    cd "$dir"
    
    if [ -f "package-lock.json" ]; then
        log "–û–±–Ω–∞—Ä—É–∂–µ–Ω package-lock.json, –∏—Å–ø–æ–ª—å–∑—É–µ–º npm ci –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
        npm ci
    else
        log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ npm install..."
        npm install
    fi
    
    if [ $? -eq 0 ]; then
        success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è $name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è $name"
        exit 1
    fi
    
    cd ..
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
build_project() {
    local dir=$1
    local name=$2
    local build_script=$3
    
    step "–°–æ–±–∏—Ä–∞–µ–º $name..."
    cd "$dir"
    
    log "–í—ã–ø–æ–ª–Ω—è–µ–º: npm run $build_script"
    npm run $build_script
    
    if [ $? -eq 0 ]; then
        success "$name —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ $name"
        exit 1
    fi
    
    cd ..
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
install_dependencies "backend" "Backend"
install_dependencies "frontend" "Frontend"
install_dependencies "bot" "Telegram Bot"

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
build_project "frontend" "Frontend" "build"
build_project "bot" "Telegram Bot" "build"

# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã frontend –≤ –∫–æ—Ä–µ–Ω—å
step "–ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã frontend –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞..."
if [ -d "frontend/dist" ]; then
    cp -r frontend/dist/* ./
    success "–§–∞–π–ª—ã frontend —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ—Ä–µ–Ω—å"
else
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend/dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏
step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
if [ -f "index.html" ]; then
    success "Frontend: index.html –Ω–∞–π–¥–µ–Ω"
else
    error "Frontend: index.html –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º bot
if [ -f "bot/dist/bot.js" ]; then
    success "Bot: bot.js —Å–æ–±—Ä–∞–Ω"
else
    error "Bot: bot.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
if [ -f "backend/server.js" ]; then
    success "Backend: server.js –Ω–∞–π–¥–µ–Ω"
else
    error "Backend: server.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
step "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö:"
if [ -d "frontend/dist" ]; then
    FRONTEND_SIZE=$(du -sh frontend/dist | cut -f1)
    log "Frontend —Ä–∞–∑–º–µ—Ä: $FRONTEND_SIZE"
fi

if [ -f "bot/dist/bot.js" ]; then
    BOT_SIZE=$(du -h bot/dist/bot.js | cut -f1)
    log "Bot —Ä–∞–∑–º–µ—Ä: $BOT_SIZE"
fi

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–±–æ—Ä–∫–µ
BUILD_INFO="logs/build-info.txt"
echo "=== RestPublic Build Info ===" > $BUILD_INFO
echo "Build Date: $(date)" >> $BUILD_INFO
echo "Git Branch: $CURRENT_BRANCH" >> $BUILD_INFO
echo "Git Commit: $(git rev-parse --short HEAD)" >> $BUILD_INFO
echo "Node Version: $(node --version)" >> $BUILD_INFO
echo "NPM Version: $(npm --version)" >> $BUILD_INFO
echo "Frontend Size: $FRONTEND_SIZE" >> $BUILD_INFO
echo "Bot Size: $BOT_SIZE" >> $BUILD_INFO

success "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ $BUILD_INFO"

# –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
echo
log "üéâ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
log "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
log "   1. –ó–∞–ø—É—Å—Ç–∏—Ç—å backend: cd backend && npm start"
log "   2. –ó–∞–ø—É—Å—Ç–∏—Ç—å bot: cd bot && npm start"
log "   3. –û—Ç–∫—Ä—ã—Ç—å frontend –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
log "üìÅ –õ–æ–≥–∏ —Å–±–æ—Ä–∫–∏: $BUILD_INFO"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞
echo
info "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "  Backend:  cd backend && npm start"
echo "  Bot:      cd bot && npm start"
echo "  Frontend: –æ—Ç–∫—Ä—ã—Ç—å index.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo
