name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
      confirm:
        description: 'Confirm deployment to production'
        required: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.inputs.confirm == 'true' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          echo "üöÄ Starting production deployment..."
          
          # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          cd /var/www/northrepubli_usr/data/www/northrepublic.me
          
          # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
          echo "üì• Updating code from repository..."
          git pull origin main --allow-unrelated-histories --no-edit
          
          # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
          echo "üõë Stopping old processes..."
          pm2 stop northrepublic-backend northrepublic-bot || echo "PM2 processes not found"
          pm2 delete northrepublic-backend northrepublic-bot || echo "PM2 processes not found"
          
          # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Backend
          echo "üîß Building Backend..."
          cd backend
          npm install
          mkdir -p ../logs
          cd ..
          
          # –°–±–æ—Ä–∫–∞ Frontend
          echo "üî® Building Frontend..."
          cd frontend
          npm install
          npm run build
          echo "üìã Copying frontend files..."
          cp -r dist/* ../
          cd ..
          
          # –°–±–æ—Ä–∫–∞ Telegram Bot
          echo "ü§ñ Building Telegram Bot..."
          cd bot
          npm install
          npm run build
          cd ..
          echo "‚úÖ Bot built and ready to start via PM2"
          
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
          echo "üîê Setting permissions..."
          chmod +x bot/dist/bot.js
          chown -R northrepubli_usr:northrepubli_usr .
          
          # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —á–µ—Ä–µ–∑ PM2
          echo "üöÄ Starting processes via PM2..."
          pm2 start ecosystem-prod.config.js --update-env
          echo "‚úÖ Processes started via PM2"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
          echo "‚úÖ Checking deployment status..."
          sleep 5
          
          if pm2 list | grep -q "northrepublic-backend.*online"; then
            echo "‚úÖ Backend successfully started via PM2"
          else
            echo "‚ùå Error: backend not started"
            echo "üìã Recent backend logs:"
            tail -n 20 logs/backend.log
            exit 1
          fi
          
          if pm2 list | grep -q "northrepublic-bot.*online"; then
            echo "‚úÖ Bot successfully started via PM2"
          else
            echo "‚ùå Error: bot not started"
            echo "üìã Recent bot logs:"
            tail -n 20 logs/bot.log
            exit 1
          fi
          
          if [ -f "index.html" ]; then
            echo "‚úÖ Frontend files successfully deployed"
          else
            echo "‚ùå Error: frontend files not found"
            exit 1
          fi
          
          echo "üéâ Production deployment completed successfully!"
          echo "üåê Site available at: https://northrepublic.me"
          echo "üì° Backend API: http://localhost:3002/api/health"
          echo "üìã Backend logs: pm2 logs northrepublic-backend"
          echo "üìã Bot logs: pm2 logs northrepublic-bot"
          echo "üîç Check processes: pm2 list"
