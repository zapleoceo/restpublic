name: Fast Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Confirm deployment to production'
        required: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.inputs.confirm == 'true' }}
    
    steps:
    - name: Fast Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          echo "⚡ Fast production deployment started..."
          cd /var/www/northrepubli_usr/data/www/northrepublic.me
          
          # Git update
          echo "📥 Git pull..."
          git pull origin main --allow-unrelated-histories --no-edit || (git fetch origin && git reset --hard origin/main)
          
          # Check what changed
          BACKEND_CHANGED=$(git diff HEAD~1 HEAD --name-only | grep -q "backend/" && echo "true" || echo "false")
          FRONTEND_CHANGED=$(git diff HEAD~1 HEAD --name-only | grep -q "frontend/" && echo "true" || echo "false")
          BOT_CHANGED=$(git diff HEAD~1 HEAD --name-only | grep -q "bot/" && echo "true" || echo "false")
          
          echo "📊 Changes: Backend=$BACKEND_CHANGED, Frontend=$FRONTEND_CHANGED, Bot=$BOT_CHANGED"
          
          # Stop services
          pm2 stop northrepublic-backend northrepublic-bot 2>/dev/null || echo "Services already stopped"
          
          # Parallel builds
          echo "🔧 Starting parallel builds..."
          (
            if [ "$BACKEND_CHANGED" = "true" ]; then
              echo "🔧 Backend: npm ci..."
              cd backend && npm ci --production --silent --prefer-offline
            else
              echo "⚡ Backend: no changes, skipping npm install"
            fi
          ) &
          
          (
            if [ "$BOT_CHANGED" = "true" ]; then
              echo "🤖 Bot: npm ci + build..."
              cd bot && npm ci --production --silent --prefer-offline && npm run build --silent
            else
              echo "⚡ Bot: no changes, skipping build"
            fi
          ) &
          
          # Frontend (main thread)
          if [ "$FRONTEND_CHANGED" = "true" ]; then
            echo "🔨 Frontend: npm ci + build..."
            cd frontend
            npm ci --silent --prefer-offline
            npm run build --silent
            cp -r dist/* ../
            cd ..
          else
            echo "⚡ Frontend: no changes, skipping build"
          fi
          
          # Wait for background jobs
          wait
          
          # Quick restart
          echo "🚀 Restarting services..."
          pm2 start ecosystem-prod.config.js --update-env
          
          # Quick health check (5 sec max)
          echo "✅ Health check..."
          for i in {1..5}; do
            if pm2 list | grep -q "northrepublic-backend.*online"; then
              echo "✅ Deployment successful!"
              echo "🌐 https://northrepublic.me"
              exit 0
            fi
            sleep 1
          done
          
          echo "❌ Health check failed, checking logs..."
          pm2 logs northrepublic-backend --lines 10
          exit 1
