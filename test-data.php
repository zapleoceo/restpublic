<?php
/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—é
 */

echo "<h1>üîç –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—é</h1>\n";
echo "<style>body{font-family:monospace;margin:20px;} .ok{color:green;} .error{color:red;} .warning{color:orange;}</style>\n";

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB
echo "<h2>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ MongoDB</h2>\n";
try {
    require_once __DIR__ . '/vendor/autoload.php';
    if (class_exists('MongoDB\Client')) {
        echo "<span class='ok'>‚úÖ MongoDB PHP –¥—Ä–∞–π–≤–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</span><br>\n";
        
        $client = new MongoDB\Client("mongodb://localhost:27017");
        $db = $client->northrepublic;
        $collection = $db->menu;
        
        $result = $collection->findOne(['_id' => 'current_menu']);
        if ($result) {
            echo "<span class='ok'>‚úÖ –ö—ç—à –Ω–∞–π–¥–µ–Ω</span><br>\n";
            echo "üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: " . count($result['categories'] ?? []) . "<br>\n";
            echo "üìä –ü—Ä–æ–¥—É–∫—Ç—ã: " . count($result['products'] ?? []) . "<br>\n";
        } else {
            echo "<span class='warning'>‚ö†Ô∏è –ö—ç—à –ø—É—Å—Ç</span><br>\n";
        }
    } else {
        echo "<span class='error'>‚ùå MongoDB –¥—Ä–∞–π–≤–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</span><br>\n";
    }
} catch (Exception $e) {
    echo "<span class='error'>‚ùå MongoDB –æ—à–∏–±–∫–∞: " . $e->getMessage() . "</span><br>\n";
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MenuCache
echo "<h2>2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MenuCache</h2>\n";
try {
    require_once __DIR__ . '/php/classes/MenuCache.php';
    $menuCache = new MenuCache();
    echo "<span class='ok'>‚úÖ MenuCache —Å–æ–∑–¥–∞–Ω</span><br>\n";
    
    $menuData = $menuCache->getMenu();
    if ($menuData) {
        echo "<span class='ok'>‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã</span><br>\n";
        echo "üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: " . count($menuData['categories']) . "<br>\n";
        echo "üìä –ü—Ä–æ–¥—É–∫—Ç—ã: " . count($menuData['products']) . "<br>\n";
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        echo "<h3>–ü–µ—Ä–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</h3>\n";
        foreach (array_slice($menuData['categories'], 0, 3) as $category) {
            echo "- " . ($category['category_name'] ?? $category['name'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è') . "<br>\n";
        }
    } else {
        echo "<span class='warning'>‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã</span><br>\n";
    }
} catch (Exception $e) {
    echo "<span class='error'>‚ùå MenuCache –æ—à–∏–±–∫–∞: " . $e->getMessage() . "</span><br>\n";
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API
echo "<h2>3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API</h2>\n";
$api_url = 'https://northrepublic.me:3002/api/menu';
$context = stream_context_create([
    'http' => [
        'timeout' => 10,
        'method' => 'GET'
    ]
]);

$response = @file_get_contents($api_url, false, $context);
if ($response !== false) {
    echo "<span class='ok'>‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω</span><br>\n";
    $data = json_decode($response, true);
    if ($data) {
        echo "üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: " . count($data['categories'] ?? []) . "<br>\n";
        echo "üìä –ü—Ä–æ–¥—É–∫—Ç—ã: " . count($data['products'] ?? []) . "<br>\n";
    }
} else {
    echo "<span class='error'>‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span><br>\n";
}

echo "<h2>üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h2>\n";
echo "<ul>\n";
echo "<li><a href='index.php'>–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</a></li>\n";
echo "<li><a href='php/menu.php'>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–µ–Ω—é</a></li>\n";
echo "<li><a href='php/init-cache.php'>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞</a></li>\n";
echo "</ul>\n";
?>
